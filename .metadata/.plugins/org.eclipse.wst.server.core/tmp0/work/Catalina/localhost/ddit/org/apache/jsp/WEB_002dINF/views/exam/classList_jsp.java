/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-11-29 13:06:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.exam;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class classList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/soo/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ddit/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1602513789311L));
    _jspx_dependants.put("jar:file:/C:/soo/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ddit/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("<div class=\"content-body\">\r\n");
      out.write("      \r\n");
      out.write("       <!-- Page Headings Start -->\r\n");
      out.write("        <div class=\"row justify-content-between align-items-center mb-10\">\r\n");
      out.write("\r\n");
      out.write("            <!-- Page Heading Start -->\r\n");
      out.write("            <div class=\"col-12 col-lg-auto mb-20\">\r\n");
      out.write("                <div class=\"page-heading\">\r\n");
      out.write("                    <h3 class=\"title\">시험목록</h3>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div><!-- Page Heading End -->\r\n");
      out.write("\r\n");
      out.write("        </div><!-- Page Headings End -->\r\n");
      out.write("      \r\n");
      out.write("      <div class=\"row\">\r\n");
      out.write("         <div class=\"col-lg-3 mb-20\">\r\n");
      out.write("                <div class=\"box-body\">\r\n");
      out.write("                    <div class=\"tab-content\">                        \r\n");
      out.write("                         <table class=\"table\" id=\"subjectListTable\"\r\n");
      out.write("                         style=\"border:2px solid #88868685;\">\r\n");
      out.write("                               <thead>\r\n");
      out.write("                                   <tr>\r\n");
      out.write("                                      <th style=\"border-bottom:2px solid #88868685;\">과목</th>\r\n");
      out.write("                                   </tr>\r\n");
      out.write("                               </thead>\r\n");
      out.write("                               <tbody>\r\n");
      out.write("                         ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("</tbody>\r\n");
      out.write("                           </table>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("         <div class=\"col-lg-0.5 mb-20\" style=\"line-height: 60px;\">\r\n");
      out.write("                <div class=\"box-body\">\r\n");
      out.write("                    <div class=\"tab-content\">                        \r\n");
      out.write("\t\t\t\t\t\t<i class=\" ti-angle-right\" style=\"font-weight:bold; font-size:25px;color:#122D4B; \"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("      <div class=\"col-lg-2 mb-20\">\r\n");
      out.write("             <table class=\"table\" id=\"classListTable\"\r\n");
      out.write("              style=\"border:2px solid #88868685;\">\r\n");
      out.write("                       <thead>\r\n");
      out.write("                          <tr>\r\n");
      out.write("                               <th style=\"border-bottom:2px solid #88868685;\">회차</th>                                                        \r\n");
      out.write("                           </tr>\r\n");
      out.write("                       </thead>\r\n");
      out.write("                       <tbody>\r\n");
      out.write("                           \r\n");
      out.write("                           \r\n");
      out.write("                       </tbody>\r\n");
      out.write("                 </table>\r\n");
      out.write("         </div>\r\n");
      out.write("       <div class=\"col-lg-0.5 mb-20\" style=\"line-height: 60px;color:#17a2b8\">\r\n");
      out.write("                <div class=\"box-body\">\r\n");
      out.write("                    <div class=\"tab-content\">                        \r\n");
      out.write("\t\t\t\t\t\t<i class=\" ti-angle-right\" style=\"font-weight:bold; font-size:25px;color:#122D4B; \"></i>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          \r\n");
      out.write("\r\n");
      out.write("         <div class=\"col-3 mb-20\">\r\n");
      out.write("             <table class=\"table\" id=\"lectureListTable\"\r\n");
      out.write("             style=\"border:2px solid #88868685;\">\r\n");
      out.write("                       <thead>\r\n");
      out.write("                           <tr>\r\n");
      out.write("                               <th style=\"border-bottom:2px solid #88868685;\">강의명</th>\r\n");
      out.write("                           </tr>\r\n");
      out.write("                       </thead>\r\n");
      out.write("                       <tbody>\r\n");
      out.write("\r\n");
      out.write("                           \r\n");
      out.write("                           \r\n");
      out.write("                       </tbody>\r\n");
      out.write("                 </table>\r\n");
      out.write("         </div>\r\n");
      out.write("         \r\n");
      out.write("         <div class=\"col-lg-10 mb-20\" style=\"margin-top:50px;\">\r\n");
      out.write("             <table class=\"table\" id=\"testListTable\">\r\n");
      out.write("                       <thead>\r\n");
      out.write("                          <tr>\r\n");
      out.write("                               <th>시험지명</th>\r\n");
      out.write("                               <th>시험시작시간</th>\r\n");
      out.write("                               <th>시험종료시간</th>\r\n");
      out.write("                               <th>만점</th>\r\n");
      out.write("                               <th>반영비율</th>\r\n");
      out.write("                               <th>상태</th>                                                          \r\n");
      out.write("                           </tr>\r\n");
      out.write("                       </thead>\r\n");
      out.write("                       <tbody>\r\n");
      out.write("\r\n");
      out.write("                           \r\n");
      out.write("                           \r\n");
      out.write("                       </tbody>\r\n");
      out.write("                 </table>\r\n");
      out.write("         </div>   \r\n");
      out.write("                  \r\n");
      out.write("      </div>         \r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   </div><!-- content-body end -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Modal 시험추가-->\r\n");
      out.write("<div class=\"modal fade\" id=\"modal-testAdd\">\r\n");
      out.write("   <div class=\"modal-dialog modal-dialog-centered\"  style=\"margin-left: 600px; margin-top: 0px;\">\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("         <div class=\"modal-header\">\r\n");
      out.write("            <h5 class=\"modal-title\">시험추가</h5>\r\n");
      out.write("            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("               <i class=\"zmdi zmdi-close\"></i>\r\n");
      out.write("            </button>\r\n");
      out.write("         </div>\r\n");
      out.write("\r\n");
      out.write("         <div class=\"form\">\r\n");
      out.write("            <form role=\"form\" action=\"insertTest.do\" name=\"registForm\" id=\"testForm\" method=\"post\" >\r\n");
      out.write("               <div class=\"row\">\r\n");
      out.write("                  <div class=\"col-11 mb-40\">\r\n");
      out.write("                  <br>\r\n");
      out.write("                     <span class=\"spam\">시험이름:</span><input class=\"form-control\" type=\"text\" maxlength=\"20\" id=\"\" name=\"test_name\"  value=\"\"><br>\r\n");
      out.write("                     <span class=\"spam\">시험시작시간:</span><input class=\"form-control\" type=\"datetime-local\" maxlength=\"20\" id=\"\" name=\"test_start_date\"  value=\"\"><br>\r\n");
      out.write("                     <span class=\"spam\">시험종료시간:</span><input class=\"form-control\" type=\"datetime-local\" maxlength=\"20\" id=\"\" name=\"test_end_date\"  value=\"\"><br>\r\n");
      out.write("                     <span class=\"spam\">최대점수:</span><input class=\"form-control\" type=\"number\" maxlength=\"3\"  oninput=\"maxLengthCheck(this)\"id=\"\" name=\"test_score\"  value=\"test_score\"><br>\r\n");
      out.write("                     <span class=\"spam\">반영비율:</span><input class=\"form-control\" type=\"number\" maxlength=\"2\"  oninput=\"maxLengthCheck(this)\" id=\"\" name=\"test_ratio\"  value=\"test_ratio\"><br><br>\r\n");
      out.write("                     <input type=\"hidden\" name=\"lecture_no\" >\r\n");
      out.write("                     <button class=\"button button-outline button-info\" type=\"button\" id=\"submitBtn\" style=\"margin-left:120px;\">추가하기</button> &#160;&#160;&#160;<button class=\"button button-outline button-danger\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("                  </div>   \r\n");
      out.write("                  <div id=\"result_view\">\r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("            </form>\r\n");
      out.write("         </div>\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Modal 시험 수정-->\r\n");
      out.write("<div class=\"modal fade\" id=\"modal-testmodi\">\r\n");
      out.write("   <div class=\"modal-dialog modal-dialog-centered\" style=\"margin-left: 600px; margin-top: 0px;\">\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("         <div class=\"modal-header\">\r\n");
      out.write("            <h5 class=\"modal-title\">시험수정</h5>\r\n");
      out.write("            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("               <i class=\"zmdi zmdi-close\"></i>\r\n");
      out.write("            </button>\r\n");
      out.write("         </div>\r\n");
      out.write("\r\n");
      out.write("         <div class=\"form\">\r\n");
      out.write("            <form role=\"form\" action=\"modifyTest.do\" name=\"modifyForm\" id=\"testmodifyForm\" method=\"post\">\r\n");
      out.write("               <div class=\"row\">\r\n");
      out.write("                  <div class=\"col-11 mb-40\">\r\n");
      out.write("                  <br>\r\n");
      out.write("                     <span class=\"spam\">시험이름:</span><input class=\"form-control\" type=\"text\" maxlength=\"20\" id=\"name\" name=\"test_name\"  value=\"\"><br>\r\n");
      out.write("                     <span class=\"spam\">시험시작시간:</span><input class=\"form-control\" type=\"datetime-local\" maxlength=\"20\" id=\"start\" name=\"test_start_date\"  value=\"\" ><br>\r\n");
      out.write("                     <span class=\"spam\">시험종료시간:</span><input class=\"form-control\" type=\"datetime-local\" maxlength=\"20\" id=\"end\" name=\"test_end_date\"  value=\"\" ><br>\r\n");
      out.write("                     <span class=\"spam\">최대점수:</span><input class=\"form-control\" type=\"number\" maxlength=\"3\"  oninput=\"maxLengthCheck(this)\"id=\"max\" name=\"test_score\"  value=\"\"><br>\r\n");
      out.write("                     <span class=\"spam\">반영비율:</span><input class=\"form-control\" type=\"number\" maxlength=\"2\"  oninput=\"maxLengthCheck(this)\" id=\"ratio\" name=\"test_ratio\"  value=\"\"><br>\r\n");
      out.write("                     <span class=\"spam\">삭제여부:</span>\r\n");
      out.write("                     <select class=\"form-control\" name=\"test_status\" id=\"test_status\">\r\n");
      out.write("                        <option value=\"0\">정상</option>\r\n");
      out.write("                        <option value=\"1\">삭제</option>\r\n");
      out.write("                     </select>\r\n");
      out.write("                     <br><br>\r\n");
      out.write("                     <input type=\"hidden\" name=\"lecture_no\" >\r\n");
      out.write("                     <input type=\"hidden\" name=\"test_no\">\r\n");
      out.write("                     <button class=\"button button-outline button-info\" type=\"button\" id=\"modifyBtn111\" style=\"margin-left:120px;\">수정하기</button> &#160;&#160;&#160;<button class=\"button button-outline button-danger\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("                  </div>   \r\n");
      out.write("                  <div id=\"result_view\">\r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("            </form>\r\n");
      out.write("         </div>\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 삭제 모달 -->\r\n");
      out.write("<div class=\"modal fade\" id=\"modal-testdele\">\r\n");
      out.write("   <div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title\">삭제확인\r\n");
      out.write("                </h5>\r\n");
      out.write("                <button class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">×</span></button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <p>정말 삭제하시겠습니까?</p>                \r\n");
      out.write("            </div>\r\n");
      out.write("            <form action=\"\">\r\n");
      out.write("               <input type=\"hidden\" name=\"test_name\">\r\n");
      out.write("               <input type=\"hidden\" name=\"lecture_no\">\r\n");
      out.write("               <input type=\"hidden\" name=\"test_no\">\r\n");
      out.write("            </form>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button class=\"button button-primary\" id=\"deleteBtn\">삭 제</button>\r\n");
      out.write("                <button class=\"button button-danger\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>   \r\n");
      out.write("   //number 타입 길이제한\r\n");
      out.write("   function maxLengthCheck(object){\r\n");
      out.write("       if (object.value.length > object.maxLength){\r\n");
      out.write("         object.value = object.value.slice(0, object.maxLength);\r\n");
      out.write("       }    \r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   //테스트 추가\r\n");
      out.write("   $('#submitBtn').on('click',function(){\r\n");
      out.write("//       var form = $('#testForm').serialize();\r\n");
      out.write("//       alert(form);\r\n");
      out.write("//       var formData = new FormData(form);\r\n");
      out.write("      var start_date = $('input[name=test_start_date]').val();\r\n");
      out.write("      var end_date = $('input[name=test_start_date]').val();\r\n");
      out.write("      var sdate = moment(start_date).format(\"YYYY-MM-DD hh:mm:ss\")      \r\n");
      out.write("      var edate = moment(end_date).format(\"YYYY-MM-DD hh:mm:ss\")      \r\n");
      out.write("      if(end_date<start_date){\r\n");
      out.write("         alert(\"시험시작시간보다 시험종료시간이 이전일 수 없습니다.\");\r\n");
      out.write("         return false;\r\n");
      out.write("      }\r\n");
      out.write("   \r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url:'insertTest.do',\r\n");
      out.write("         type:'POST',\r\n");
      out.write("         data: {\r\n");
      out.write("            \"test_no\":$('input[name=test_no]').val(),\r\n");
      out.write("            \"lecture_no\":$('input[name=lecture_no]').val(),\r\n");
      out.write("            \"test_name\":$('input[name=test_name]').val(),\r\n");
      out.write("            localDateTime:start_date,\r\n");
      out.write("            localDateTime2:end_date,\r\n");
      out.write("            test_score:$('input[name=test_score]').val(),\r\n");
      out.write("            test_ratio:$('input[name=test_ratio]').val()\r\n");
      out.write("         },\r\n");
      out.write("         success:function(data){\r\n");
      out.write("            \r\n");
      out.write("             getTestPage(data);\r\n");
      out.write("         },\r\n");
      out.write("         error:function(error){\r\n");
      out.write("            alert(error.status);\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   //시험 수정값 세팅\r\n");
      out.write("   $(document).on('click','#modifyTestBtn',function(){\r\n");
      out.write("      var testName = $(this).attr(\"data-test_name\");\r\n");
      out.write("      var testStartDate = $(this).attr(\"data-test_start_date\");      \r\n");
      out.write("      var testEndDate = $(this).attr(\"data-test_end_date\");      \r\n");
      out.write("      var testScore = $(this).attr(\"data-test_score\");\r\n");
      out.write("      var testRatio = $(this).attr(\"data-test_ratio\");\r\n");
      out.write("      var lectureNo = $(this).attr(\"data-lecture_no\");\r\n");
      out.write("      var testNo = $(this).attr(\"data-test_no\");\r\n");
      out.write("      var testStatus = $(this).attr(\"data-test_status\");\r\n");
      out.write("//       alert(testStartDate);\r\n");
      out.write("\r\n");
      out.write("//       console.log(testStartDate);\r\n");
      out.write("//       console.log(new Date(Number(testStartDate)).toString(\"YYYY-MM-DDTHH:mm\"));\r\n");
      out.write("      var sdate = new Date(Number(testStartDate));\r\n");
      out.write("      var edate = new Date(Number(testEndDate));\r\n");
      out.write("      \r\n");
      out.write("//       console.log(moment(date2).format(\"YYYY-MM-DDTHH:mm\"));\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("//       var dateSD = new Date(Number(testStartDate)).toISOString().substring(0,16);      \r\n");
      out.write("      var dateSD = moment(sdate).format(\"YYYY-MM-DDTHH:mm\");\r\n");
      out.write("      var dateED = moment(edate).format(\"YYYY-MM-DDTHH:mm\");\r\n");
      out.write("//       console.log(dateSD);\r\n");
      out.write("\r\n");
      out.write("      $('input[name=test_name]').val(testName);\r\n");
      out.write("      $('input[name=test_start_date]').val(dateSD);\r\n");
      out.write("      $('input[name=test_end_date]').val(dateED);\r\n");
      out.write("      $('input[name=test_score]').val(testScore);\r\n");
      out.write("      $('input[name=test_ratio]').val(testRatio);\r\n");
      out.write("      $('input[name=lecture_no]').val(lectureNo);      \r\n");
      out.write("      $('input[name=test_no]').val(testNo);\r\n");
      out.write("      $(\"#test_status option[value=\"+testStatus+\"]\").attr(\"selected\", true);\r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   //시험 수정 버튼 \r\n");
      out.write("   $('#modifyBtn111').on('click',function(){\r\n");
      out.write("      \r\n");
      out.write("      var modifyForm = $('form[name=\"modifyForm\"]');\r\n");
      out.write("      \r\n");
      out.write("      var sdd = $('input[name=\"test_start_date\"]').eq(1).val();\r\n");
      out.write("      var edd = $('input[name=\"test_end_date\"]').eq(1).val()\r\n");
      out.write("      if(edd<sdd){\r\n");
      out.write("         alert(\"시험시작시간보다 시험종료시간이 이전일 수 없습니다.\");\r\n");
      out.write("         return false;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      var start_date = $('input[name=\"test_start_date\"]').eq(1).val().replace(\"T\",\" \");\r\n");
      out.write("      var end_date = $('input[name=\"test_end_date\"]').eq(1).val().replace(\"T\",\" \");\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      $('input[name=\"test_start_date\"]').eq(1).attr(\"type\",\"text\").val(start_date);\r\n");
      out.write("      $('input[name=\"test_end_date\"]').eq(1).attr(\"type\",\"text\").val(end_date);\r\n");
      out.write("   \r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url:'modifyTest.do',\r\n");
      out.write("         type:'POST',\r\n");
      out.write("         data: modifyForm.serialize(),\r\n");
      out.write("         success:function(result){            \r\n");
      out.write("            getTestPage(result);\r\n");
      out.write("         },\r\n");
      out.write("         error:function(error){\r\n");
      out.write("            alert(error.status);\r\n");
      out.write("         },\r\n");
      out.write("          complete : function() {\r\n");
      out.write("            $('input[name=\"test_start_date\"]').eq(1).attr(\"type\",\"datetime-local\");\r\n");
      out.write("            $('input[name=\"test_end_date\"]').eq(1).attr(\"type\",\"datetime-local\");\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            $('input[name=\"test_start_date\"]').eq(1).val(sdd);\r\n");
      out.write("            $('input[name=\"test_end_date\"]').eq(1).val(edd);\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("      });\r\n");
      out.write("   \r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   //시험 삭제값 심어놓기\r\n");
      out.write("   $(document).on('click','#deleteTestBtn',function(){\r\n");
      out.write("      var testName = $(this).attr(\"data-test_name\");\r\n");
      out.write("      var testNo = $(this).attr(\"data-test_no\");\r\n");
      out.write("      var lectureNo = $(this).attr(\"data-lecture_no\");\r\n");
      out.write("\r\n");
      out.write("      $('input[name=test_name]').val(testName);\r\n");
      out.write("      $('input[name=test_no]').val(testNo);   \r\n");
      out.write("      $('input[name=lecture_no]').val(lectureNo);\r\n");
      out.write("         \r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   //시험 삭제\r\n");
      out.write("   $('#deleteBtn').on('click',function(){\r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url:'deleteTest.do',\r\n");
      out.write("         type:'POST',\r\n");
      out.write("         data: {\r\n");
      out.write("            \"test_no\":$('input[name=test_no]').eq(1).val(),   \r\n");
      out.write("            \"lecture_no\":$('input[name=lecture_no]').eq(2).val()\r\n");
      out.write("            \r\n");
      out.write("         },\r\n");
      out.write("         success:function(result){            \r\n");
      out.write("            getTestPage(result);\r\n");
      out.write("         },\r\n");
      out.write("         error:function(error){\r\n");
      out.write("            alert(error.status);\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("   \r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("    \r\n");
      out.write("   function classList2(ele){\r\n");
      out.write("      var curriculum_no = ele;\r\n");
      out.write("      \r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url:'classList2.do',\r\n");
      out.write("         data:{\"curriculum_no\":curriculum_no},\r\n");
      out.write("         type:'post',\r\n");
      out.write("         success:function(data){\r\n");
      out.write("            getClassPage(data);\r\n");
      out.write("         },\r\n");
      out.write("         error:function(error){\r\n");
      out.write("            alert(error.stauts);\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   // 강의리스트   \r\n");
      out.write("   function lectureList(e){\r\n");
      out.write("      var class_no = e;\r\n");
      out.write("      \r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url:'lectureList.do',\r\n");
      out.write("         data:{\"class_no\":class_no},\r\n");
      out.write("         type:'post',\r\n");
      out.write("         success:function(data){                 \r\n");
      out.write("            getLecturePage(data);                       \r\n");
      out.write("\r\n");
      out.write("         },\r\n");
      out.write("         error:function(error){\r\n");
      out.write("            alert(error.status);            \r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("      });\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   //테스트 리스트    \r\n");
      out.write("   function testList(ele){\r\n");
      out.write("      var lecture_no = ele;\r\n");
      out.write("      \r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url:'testList.do',\r\n");
      out.write("         data:{\"lecture_no\":lecture_no},\r\n");
      out.write("         type:'post',\r\n");
      out.write("         success:function(data){            \r\n");
      out.write("              getTestPage(data);                    \r\n");
      out.write("\r\n");
      out.write("         },\r\n");
      out.write("         error:function(error){\r\n");
      out.write("            alert(error.status);            \r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   //테스트링크\r\n");
      out.write("   function selectTest(ele){\r\n");
      out.write("      var test_no = ele;\r\n");
      out.write("      \r\n");
      out.write("      location.href=\"list.do?test_no=\"+test_no;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   //시험추가\r\n");
      out.write("   var lecture_no;\r\n");
      out.write("   $(document).on('click','.addTestBtn',function(){\r\n");
      out.write("      var btn = $(this);\r\n");
      out.write("      lecture_no = btn.parent().parent().children().eq(0).children('input').val();\r\n");
      out.write("      $('input[name=lecture_no]').val(lecture_no);\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("</script>\r\n");
      out.write("<!-- 핸들바 - 강의명, 시험지명 -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/js/moment.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.6/handlebars.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/x-handlebars-template\"  id=\"lecture-list-template\" >\r\n");
      out.write("<tbody id=\"lecutreList\"\r\n");
      out.write("{{#each .}}\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td><input type=\"hidden\" value=\"{{lecture_no}}\">\r\n");
      out.write("      &#160;&#160;&#160;<a href=\"#\" onClick=testList(\"{{lecture_no}}\");return false;>{{lecture_name}}</a></td>\r\n");
      out.write("      \r\n");
      out.write("   </tr>\r\n");
      out.write("{{/each}}\r\n");
      out.write("</tbody>\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/x-handlebars-template\"  id=\"test-list-template\" >\r\n");
      out.write("<tbody id=\"testList\"\r\n");
      out.write("{{#each .}}\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td><a href=\"#\" onClick=selectTest(\"{{test_no}}\");return false;>{{test_name}}</a></td>\r\n");
      out.write("      <td>{{dateFormat test_start_date}}</td>\r\n");
      out.write("      <td>{{dateFormat test_end_date}} </td>  \r\n");
      out.write("      <td>{{test_score}}</td>\r\n");
      out.write("      <td>{{test_ratio}}</td>   \r\n");
      out.write("      <td>{{statusFormat test_status}}</td>\r\n");
      out.write("     \r\n");
      out.write("   </tr>\r\n");
      out.write("{{/each}}\r\n");
      out.write("</tbody>\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/x-handlebars-template\"  id=\"class-list-template\" >\r\n");
      out.write("<tbody id=\"classList2\"\r\n");
      out.write("{{#each .}}\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td><a href=\"#\" onClick=lectureList(\"{{class_no}}\");return false;>{{class_number}}차  </a></td>\r\n");
      out.write("   </tr>\r\n");
      out.write("{{/each}}\r\n");
      out.write("</tbody>\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function getLecturePage(result){ \r\n");
      out.write("      var template=Handlebars.compile($('#lecture-list-template').html());\r\n");
      out.write("      var html = template(result); \r\n");
      out.write("      $('#lecutreList').remove();\r\n");
      out.write("      $('#testList').remove();\r\n");
      out.write("      $('#lectureListTable').append(html);\r\n");
      out.write("   }  \r\n");
      out.write("   \r\n");
      out.write("function getTestPage(result){ \r\n");
      out.write("      Handlebars.registerHelper('dateFormat', function(context, block) {\r\n");
      out.write("        if (window.moment) {\r\n");
      out.write("//           var f = block.hash.format || \"YYYY년 MM월 DD일 HH:MM\";\r\n");
      out.write("               \r\n");
      out.write("//           return moment(Date(context)).format(f);\r\n");
      out.write("          return moment(context).format(\"YYYY년 MM월 DD일 HH:mm\");\r\n");
      out.write("        }else{\r\n");
      out.write("          return context;   //  moment plugin not available. return data as is.\r\n");
      out.write("        };\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      Handlebars.registerHelper('statusFormat', function(context) {\r\n");
      out.write("        if (context==0) {\r\n");
      out.write("          return \"정상\"\r\n");
      out.write("        }else{\r\n");
      out.write("          return \"삭제\"\r\n");
      out.write("        };\r\n");
      out.write("      });\r\n");
      out.write("   \r\n");
      out.write("      var template=Handlebars.compile($('#test-list-template').html());\r\n");
      out.write("      var html = template(result); \r\n");
      out.write("      $('#testList').remove();\r\n");
      out.write("      $('#testListTable').append(html);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getClassPage(result){ \r\n");
      out.write("   var template=Handlebars.compile($('#class-list-template').html());\r\n");
      out.write("   var html = template(result); \r\n");
      out.write("   $('#classList2').remove();\r\n");
      out.write("   $('#classList2').remove();\r\n");
      out.write("   $('#classListTable').append(html);\r\n");
      out.write("} \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("/*    #lectureListTable tr:nth-child(1){font-weight: bold;} */\r\n");
      out.write("/*    #lectureListTable tr td:nth-child(1) { */\r\n");
      out.write("/*       width:200px; */\r\n");
      out.write("/*    } */\r\n");
      out.write("/*    #lectureListTable tr td:nth-child(2) { */\r\n");
      out.write("/*       width:60px; */\r\n");
      out.write("/*    } */\r\n");
      out.write("   .compose-mail-modal modal fade{\r\n");
      out.write("      width:400px;\r\n");
      out.write("   }\r\n");
      out.write("   .addTestBtn{background-color: rgba(0,0,0,0);border:none;}\r\n");
      out.write("   \r\n");
      out.write("   .form-control{width:300px; display: inline-block; margin-bottom:5px;}\r\n");
      out.write("   .spam{width:100px;display: inline-block; margin-left:10px;}\r\n");
      out.write("   .modifyBtn{background-color: rgba(0,0,0,0);border:none;}\r\n");
      out.write("   .deleteBtn{background-color: rgba(0,0,0,0);border:none;}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/exam/classList.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("cri");
      // /WEB-INF/views/exam/classList.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/exam/classList.jsp(7,0) '${pageMaker.cri }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageMaker.cri }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/exam/classList.jsp(37,25) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/exam/classList.jsp(37,25) '${curriculumList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${curriculumList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/exam/classList.jsp(37,25) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("curriVO");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("<tr>\r\n");
            out.write("                                       <td><a href=\"#\" onClick=classList2(\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${curriVO.curriculum_no }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\");return false;>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${curriVO.curriculum_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a></td>\r\n");
            out.write("                                   </tr>\r\n");
            out.write("                                  ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
