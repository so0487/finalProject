/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-11-29 13:05:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.exam;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class studentTestList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/soo/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ddit/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/exam/registForm_js.jsp", Long.valueOf(1606565342130L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1602513789311L));
    _jspx_dependants.put("jar:file:/C:/soo/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ddit/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"content-body\">\r\n");
      out.write("\t\t\r\n");
      out.write("       <!-- Page Headings Start -->\r\n");
      out.write("        <div class=\"row justify-content-between align-items-center mb-10\">\r\n");
      out.write("\r\n");
      out.write("            <!-- Page Heading Start -->\r\n");
      out.write("            <div class=\"col-12 col-lg-auto mb-20\">\r\n");
      out.write("                <div class=\"page-heading\">\r\n");
      out.write("                    <h3 class=\"title\">시험목록</h3>\r\n");
      out.write("                </div>\t\t\r\n");
      out.write("            </div><!-- Page Heading End -->\r\n");
      out.write("\r\n");
      out.write("        </div><!-- Page Headings End -->\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t<div class=\"col-lg-10 mb-20\">\r\n");
      out.write("\t\t\t\t <table class=\"table\" id=\"testListTable\">\r\n");
      out.write("                       <thead>\r\n");
      out.write("                          <tr>\r\n");
      out.write("                               <th>시험지명</th>\r\n");
      out.write("                               <th>시험시작시간</th>\r\n");
      out.write("                               <th>시험종료시간</th>\r\n");
      out.write("                               <th>만점</th>\r\n");
      out.write("                               <th>반영비율</th>\r\n");
      out.write("                               <th>시험여부</th>\r\n");
      out.write("                               <th>응시</th>                                                      \r\n");
      out.write("                           </tr>\r\n");
      out.write("             \t       </thead>\r\n");
      out.write("                       <tbody>\r\n");
      out.write("\r\n");
      out.write("                           \r\n");
      out.write("                           \r\n");
      out.write("                       </tbody>\r\n");
      out.write("                 </table>\r\n");
      out.write("\t\t\t</div>\t\t\t\t\t\t\t\r\n");
      out.write("\t\t</div>\t\r\n");
      out.write("\t</div><!-- content-body end -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t\r\n");
      out.write("\twindow.onload=function(){\r\n");
      out.write("\t\ttestList(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t\r\n");
      out.write("\t//테스트 리스트\t \r\n");
      out.write("\tfunction testList(ele){\r\n");
      out.write("// \t\talert(ele);\r\n");
      out.write("\t\tvar lecture_no = ele;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:'testList.do',\r\n");
      out.write("\t\t\tdata:{\"lecture_no\":lecture_no},\r\n");
      out.write("\t\t\ttype:'post',\r\n");
      out.write("\t\t\tsuccess:function(data){\t\t\t\t\r\n");
      out.write("\t\t        getTestPage(data);        \t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror:function(error){\r\n");
      out.write("\t\t\t\talert(error.status);\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//테스트링크\r\n");
      out.write("\tfunction selectTest(ele){\r\n");
      out.write("\t\tvar test_no = ele;\r\n");
      out.write("// \t\tlocation.href=\"insertTestHistory.do?test_no=\"+test_no+\"&lecture_no=\"+\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("// \t\tlocation.href=\"listStu.do?test_no=\"+test_no+\"&lecture_no=\"+\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlocation.href=\"listStu.do?test_no=\"+test_no+\"&lecture_no=\"+\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"+\"&member_id\"+\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.member_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\tsetCookie(\"testJustOne\",test_no+\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecture_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('+');
      out.write('"');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.member_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\"1\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction setCookie(cookie_name, value, days) {\r\n");
      out.write("\t\t  var exdate = new Date();\r\n");
      out.write("\t\t  exdate.setDate(exdate.getDate() + days);\r\n");
      out.write("\t\t  // 설정 일수만큼 현재시간에 만료값으로 지정\r\n");
      out.write("\r\n");
      out.write("\t\t  var cookie_value = escape(value) + ((days == null) ? '' : '; expires=' + exdate.toUTCString());\r\n");
      out.write("\t\t  document.cookie = cookie_name + '=' + cookie_value;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("<!-- 핸들바 - 강의명, 시험지명 -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/js/moment.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.6/handlebars.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/x-handlebars-template\"  id=\"test-list-template\" >\r\n");
      out.write("<tbody id=\"testList\"\r\n");
      out.write("{{#each .}}\r\n");
      out.write("   <tr>\r\n");
      out.write("\t\t<td>{{test_name}}</td>\r\n");
      out.write("\t\t<td>{{dateFormat test_start_date}}</td>\r\n");
      out.write("\t\t<td>{{dateFormat test_end_date}} </td>  \r\n");
      out.write("\t\t<td>{{test_score}}</td>\r\n");
      out.write("\t\t<td>{{test_ratio}}</td>\t\r\n");
      out.write(" \t\t<td>{{periodFormat test_start_date test_end_date}}</td>\r\n");
      out.write("\t\t<td>{{{goBtn test_start_date test_end_date test_no}}}</td>\r\n");
      out.write("   </tr>\r\n");
      out.write("{{/each}}\r\n");
      out.write("</tbody>\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\t\r\n");
      out.write("\r\n");
      out.write("function getTestPage(result){\r\n");
      out.write("\tvar today = new Date();\r\n");
      out.write("\t\r\n");
      out.write("\t\tHandlebars.registerHelper('goBtn', function(start,end,test_no) {\r\n");
      out.write("\t\t\tif(moment(today).isBefore(start)){\r\n");
      out.write("\t\t\t\treturn \"\"\r\n");
      out.write("\t\t\t}else if(moment(today).isAfter(end)){\t\t\t\t\r\n");
      out.write("\t\t\t\treturn \"\"\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\treturn '<a href=\"#\" onClick=selectTest(\"'+test_no+'\");return false;>시험보기</a>'\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\tHandlebars.registerHelper('periodFormat', function(start,end) {\r\n");
      out.write("\t\t\tif(moment(today).isBefore(start)){\r\n");
      out.write("\t\t\t\treturn \"시험전\"\r\n");
      out.write("\t\t\t}else if(moment(today).isAfter(end)){\t\t\t\t\r\n");
      out.write("\t\t\t\treturn \"시험종료\"\r\n");
      out.write("\t\t\t}else{\t\t\t\t\r\n");
      out.write("\t\t\t\treturn \"시험중\"\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tHandlebars.registerHelper('dateFormat', function(context, block) {\t\t\t\r\n");
      out.write("\t\t  if (window.moment) {\t\t\t  \r\n");
      out.write("\t\t    return moment(context).format(\"YYYY년 MM월 DD일 HH:mm\");\r\n");
      out.write("\t\t  }else{\r\n");
      out.write("\t\t    return context;   //  moment plugin not available. return data as is.\r\n");
      out.write("\t\t  };\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t   var template=Handlebars.compile($('#test-list-template').html());\r\n");
      out.write("\t   var html = template(result); \r\n");
      out.write("\t   $('#testList').remove();\r\n");
      out.write("\t   $('#testListTable').append(html);\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t.compose-mail-modal modal fade{\r\n");
      out.write("\t\twidth:400px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.addTestBtn{background-color: rgba(0,0,0,0);border:none;}\r\n");
      out.write("\t\r\n");
      out.write("\t.form-control{width:300px; display: inline-block; margin-bottom:5px;}\r\n");
      out.write("\tspan{width:100px;display: inline-block; margin-left:10px;}\r\n");
      out.write("\t.modifyBtn{background-color: rgba(0,0,0,0);border:none;}\r\n");
      out.write("\t.goBtn{background-color: rgba(0,0,0,0);border:none;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!-- 추가하기 스크롤바   -->\r\n");
      out.write("<style>\r\n");
      out.write("\t#followquick { position:absolute; top:220px; right:50%; margin-right:-800px; }\r\n");
      out.write("\t\r\n");
      out.write("\t.redBox{\r\n");
      out.write("\t\tborder:2px solid red;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("\t//follow quick menu\r\n");
      out.write("\t$(window).scroll(function() {\r\n");
      out.write("\t\tvar scrollTop = $(document).scrollTop();\r\n");
      out.write("\t\tif (scrollTop < 180) {\r\n");
      out.write("\t\t\tscrollTop = 180;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(\"#followquick\").stop();\r\n");
      out.write("\t\t$(\"#followquick\").animate({\r\n");
      out.write("\t\t\t\"top\" : scrollTop\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t$('#registBtn').on('click',function(){\r\n");
      out.write("\t\tfor (var i = 0; i < $('input[name=exam_no]').length; i++) {\r\n");
      out.write("\t\t\tif($('input[name=exam_no]').eq(i).val()==\"\"){\r\n");
      out.write("\t\t\t\talert(\"문제번호를 입력해주세요.\")\r\n");
      out.write("\t\t\t\t$('input[name=exam_no]').eq(i).focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\tfor (var i = 0; i < $('input[name=exam_title]').length; i++) {\r\n");
      out.write("\t\tif($('input[name=exam_title]').eq(i).val()==\"\"){\r\n");
      out.write("\t\t\talert(\"문제제목을 입력해주세요\")\r\n");
      out.write("\t\t\t$('input[name=exam_title]').eq(i).focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfor (var i = 0; i < $('select[name=exam_category_no]').length; i++) {\r\n");
      out.write("\t\tif($('select[name=exam_category_no]').eq(i).val()==\"\"){\r\n");
      out.write("\t\t\talert(\"문제유형을 선택해주세요\")\r\n");
      out.write("\t\t\t$('select[name=exam_category_no]').eq(i).focus();\r\n");
      out.write("\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfor (var i = 0; i < $('input[name=exam_point]').length; i++) {\r\n");
      out.write("\t\tif($('input[name=exam_point]').eq(i).val()==\"\"){\r\n");
      out.write("\t\t\talert(\"문제배점을 입력해주세요\")\r\n");
      out.write("\t\t\t$('input[name=exam_point]').eq(i).focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfor (var i = 0; i < $('input[name=exam_answer]').length; i++) {\r\n");
      out.write("\t\tif($('input[name=exam_answer]').eq(i).val()==\"\"){\r\n");
      out.write("\t\t\talert(\"문제정답을 입력해주세요\")\r\n");
      out.write("\t\t\t$('input[name=exam_answer]').eq(i).focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfor (var i = 0; i < $('input[name=example_content]').length; i++) {\r\n");
      out.write("\t\tif($('input[name=example_content]').eq(i).val()==\"\"){\r\n");
      out.write("\t\t\talert(\"객관식 문항의 내용을 입력해주세요\")\r\n");
      out.write("\t\t\t$('input[name=example_content]').eq(i).focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfor (var i = 0; i < $('input[name=test_name]').length; i++) {\r\n");
      out.write("\t\tif($('input[name=test_name]').eq(i).val()==\"\"){\r\n");
      out.write("\t\t\talert(\"시험지를 선택해주세요\")\r\n");
      out.write("\t\t\t$('input[name=test_name]').eq(i).focus();\r\n");
      out.write("\t\t\treturn false;\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar form = document.registForm;\r\n");
      out.write("\t\tform.submit();\t\t\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$('#modifyBtn').on('click',function(){\r\n");
      out.write("\tfor (var i = 0; i < $('input[name=exam_no]').length; i++) {\r\n");
      out.write("\t\tif($('input[name=exam_no]').eq(i).val()==\"\"){\r\n");
      out.write("\t\t\talert(\"문제번호를 입력해주세요.\")\r\n");
      out.write("\t\t\t$('input[name=exam_no]').eq(i).focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfor (var i = 0; i < $('input[name=exam_title]').length; i++) {\r\n");
      out.write("\tif($('input[name=exam_title]').eq(i).val()==\"\"){\r\n");
      out.write("\t\talert(\"문제제목을 입력해주세요\")\r\n");
      out.write("\t\t$('input[name=exam_title]').eq(i).focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfor (var i = 0; i < $('select[name=exam_category_no]').length; i++) {\r\n");
      out.write("\tif($('select[name=exam_category_no]').eq(i).val()==\"\"){\r\n");
      out.write("\t\talert(\"문제유형을 선택해주세요\")\r\n");
      out.write("\t\t$('select[name=exam_category_no]').eq(i).focus();\r\n");
      out.write("\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfor (var i = 0; i < $('input[name=exam_point]').length; i++) {\r\n");
      out.write("\tif($('input[name=exam_point]').eq(i).val()==\"\"){\r\n");
      out.write("\t\talert(\"문제배점을 입력해주세요\")\r\n");
      out.write("\t\t$('input[name=exam_point]').eq(i).focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfor (var i = 0; i < $('input[name=exam_answer]').length; i++) {\r\n");
      out.write("\tif($('input[name=exam_answer]').eq(i).val()==\"\"){\r\n");
      out.write("\t\talert(\"문제정답을 입력해주세요\")\r\n");
      out.write("\t\t$('input[name=exam_answer]').eq(i).focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfor (var i = 0; i < $('input[name=example_content]').length; i++) {\r\n");
      out.write("\tif($('input[name=example_content]').eq(i).val()==\"\"){\r\n");
      out.write("\t\talert(\"객관식 문항의 내용을 입력해주세요\")\r\n");
      out.write("\t\t$('input[name=example_content]').eq(i).focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfor (var i = 0; i < $('input[name=test_name]').length; i++) {\r\n");
      out.write("\tif($('input[name=test_name]').eq(i).val()==\"\"){\r\n");
      out.write("\t\talert(\"시험지를 선택해주세요\")\r\n");
      out.write("\t\t$('input[name=test_name]').eq(i).focus();\r\n");
      out.write("\t\treturn false;\t\r\n");
      out.write("\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tif(!(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${test.test_score }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("==$('#sumPoint').val())){\r\n");
      out.write("\t\talert(\"총점과 시험배점이 다릅니다.\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tvar form = document.modifyForm;\r\n");
      out.write("\tform.submit();\t\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t$(document).on(\"change keyup paste input\", \"input\", function() {\r\n");
      out.write("\t\t$(this).attr('style','border:1px solid rgb(118, 118, 118)');\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(\"#backBtn\").on('click', function(){\r\n");
      out.write("\thistory.go(-1);\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
