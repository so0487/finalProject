/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-11-29 11:20:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class open_005ffooter_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/include/footer_js.jsp", Long.valueOf(1604417185973L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- JS\r\n");
      out.write("============================================ -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Global Vendor, plugins & Activation JS -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/vendor/modernizr-3.6.0.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/vendor/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/vendor/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/vendor/bootstrap.min.js\"></script>\r\n");
      out.write("    <!--Plugins JS-->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/plugins/perfect-scrollbar.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/plugins/tippy4.min.js.js\"></script>\r\n");
      out.write("    <!--Main JS-->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/main.js\"></script>\r\n");
      out.write("   \r\n");
      out.write("   \t<!-- common.js -->\r\n");
      out.write("\t<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/js/common.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/plugins/moment/moment.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- include summernote css/js -->\r\n");
      out.write("\t<script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/plugins/summernote/summernote-bs4.min.js\"></script>\r\n");
      out.write("\t<script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/plugins/summernote/summernote.active.js\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<!-- <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\" rel=\"stylesheet\"> -->\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<link href=\"https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js\"></script>\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 테이블 js -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/plugins/moment/moment.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/plugins/footable/footable.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/adomx-html-tf-v1.1/html/light/assets/js/plugins/footable/footable.active.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.6/handlebars.min.js\" ></script>\r\n");
      out.write("<script type=\"text/x-handlebars-template\"  id=\"subMenu-list-template\" >\r\n");
      out.write("{{#each .}}\r\n");
      out.write("\t<li class=\"nav-item subMenu\" >\r\n");
      out.write("      \t<a href=\"javascript:goPage('{{menu_url }}','{{menu_no}}');\" >\r\n");
      out.write("          <i class=\"{{menu_icon }}\"></i>\r\n");
      out.write("             <p>{{menu_name }}</p>\r\n");
      out.write("        </a>\r\n");
      out.write("\t</li>\r\n");
      out.write("{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var printData=function(subMenuArr,target,templateObject){\r\n");
      out.write("\tvar template=Handlebars.compile(templateObject.html());\r\n");
      out.write("\tvar html = template(subMenuArr);\t\r\n");
      out.write("\t$('.subMenu').remove();\r\n");
      out.write("\ttarget.append(html);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function subMenu(menu_no){\r\n");
      out.write("\t\r\n");
      out.write("\t\t$.getJSON(\"");
      out.print(request.getContextPath());
      out.write("/common/subMenu.do?menu_no=\"+menu_no,function(data){\t\r\n");
      out.write("\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\tprintData(data,$('.side-header-sub-menu'),$('#subMenu-list-template'));\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function goPage(menu_url,menu_no){\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : '");
      out.print(request.getContextPath());
      out.write("/common/loginUser',\r\n");
      out.write("\t\ttype : 'get',\r\n");
      out.write("\t\tsuccess:function(data){\r\n");
      out.write("\t\t\tif(data){\r\n");
      out.write("\t\t\t\t//alert(\"로그인 유저 존재!\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror:function(error){\r\n");
      out.write("\t\t\t//alert(\"로그인 유저 없음!\");\r\n");
      out.write("\t\t\twindow.location.reload();\t\t\t\t\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t  // HTML5 지원브라우저에서 사용 가능\r\n");
      out.write("    if (typeof(history.pushState) == 'function') {\r\n");
      out.write("        //현재 주소를 가져온다.\r\n");
      out.write("        var renewURL = location.href;\r\n");
      out.write("        //현재 주소 중 .do 뒤 부분이 있다면 날려버린다.\r\n");
      out.write("        renewURL = renewURL.substring(0, renewURL.indexOf(\"/ddit\")+5);\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("            renewURL += menu_url;\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        //페이지를 리로드하지 않고 페이지 주소만 변경할 때 사용\r\n");
      out.write("        location.href= renewURL;\r\n");
      out.write("     \r\n");
      out.write("    } else {\r\n");
      out.write("        location.hash = \"#\"+menu_no;\r\n");
      out.write("    }\r\n");
      out.write("\t  \r\n");
      out.write("\t$('#if_list').attr(\"src\",\"");
      out.print(request.getContextPath());
      out.write("\"+menu_url);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
