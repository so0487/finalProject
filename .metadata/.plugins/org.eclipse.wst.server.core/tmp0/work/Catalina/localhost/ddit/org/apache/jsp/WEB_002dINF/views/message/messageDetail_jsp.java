/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-12-04 17:16:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.message;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class messageDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/views/message/attach_js.jsp", Long.valueOf(1605023467656L));
    _jspx_dependants.put("jar:file:/C:/soo/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ddit/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/message/common_message_bottom.jsp", Long.valueOf(1607093171675L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1602513789311L));
    _jspx_dependants.put("/WEB-INF/views/message/common_message_top.jsp", Long.valueOf(1606565341084L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"content-body\">\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Page Headings Start -->\r\n");
      out.write("\t<div class=\"row justify-content-between align-items-center mb-10\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<!-- Page Heading Start -->\r\n");
      out.write("\t<div class=\"col-12 col-lg-auto mb-20\">\r\n");
      out.write("\t\t<div class=\"page-heading\">\r\n");
      out.write("\t\t\t<h3 class=\"title\" style=\"text-align: left;\">메시지</h3>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- Page Heading End -->\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- Page Headings End -->\r\n");
      out.write("\t\r\n");
      out.write("\t   <!--Mail Wrapper Start-->\r\n");
      out.write("\t   <div class=\"mail-wrapper\">\r\n");
      out.write("\t\r\n");
      out.write("\t       <!--Mail Menu Start-->\r\n");
      out.write("\t       <div class=\"mail-menu\">\r\n");
      out.write("<!--  \t           <button class=\"button-compose-mail button button-danger button-round\" data-toggle=\"modal\" data-target=\"#modal-compose-mail\">메시지쓰기</button> -->\r\n");
      out.write("\t           <button class=\"button-compose-mail button button-danger button-round\" onclick=\"OpenWindow('");
      out.print(request.getContextPath());
      out.write("/message/sendMessageForm',800,600)\">메시지쓰기</button>\r\n");
      out.write("\t           <ul>\r\n");
      out.write("\t               <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/message/list\"><i class=\"zmdi zmdi-email-open\"></i>받은 메시지함</a></li>\r\n");
      out.write("\t               <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/message/sendMessageBox\"><i class=\"zmdi zmdi-mail-send\"></i>보낸 메시지</a></li>\r\n");
      out.write("\t               <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/message/notReadMessage\"><i class=\"zmdi ti-email\"></i>안읽은 메시지</a></li>\r\n");
      out.write("\t               <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/message/deleteMessageBox\"><i class=\"zmdi zmdi-delete\"></i>삭제메시지</a></li>\r\n");
      out.write("\t           </ul>\r\n");
      out.write("\t       </div>\r\n");
      out.write("\t       <!--Mail Menu End-->\r\n");
      out.write("\t\r\n");
      out.write("\t       <!--Mail List Container Start-->\r\n");
      out.write("\t       <div class=\"mail-container\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t           <!--Mail Options Start-->\r\n");
      out.write("\t           \r\n");
      out.write("\t           <div class=\"mail-options\">\r\n");
      out.write("\t               <div class=\"mail-options-group\">\r\n");
      out.write("\t                   <input type=\"checkbox\" class=\"adomx-checkbox selectAll\" id=\"selectAll\" name=\"selectAll\" style=\"margin-top: 20px;\">\r\n");
      out.write("\t\t                    <div class=\"header-search-form\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"keyword\" class=\"card-tools\" style=\"width: 500px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"input-group row\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- sort num -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"form-control col-md-3\" name=\"perPageNum\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid=\"perPageNum\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">정렬개수</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.perPageNum == 5 ? 'selected':''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">5개씩</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.perPageNum == 10 ? 'selected':''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">10개씩</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"20\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.perPageNum == 20 ? 'selected':''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">20개씩</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"form-control col-md-4\" name=\"searchType\"\tid=\"searchType\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"all\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageMaker.cri.searchType eq 'all' ? 'selected':'' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">전체</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageMaker.cri.searchType eq 't' ? 'selected':'' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">제 목</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"sender\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageMaker.cri.searchType eq 'sender' ? 'selected':'' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">발신자</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"receiver\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageMaker.cri.searchType eq 'receiver' ? 'selected':'' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">수신자</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"c\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageMaker.cri.searchType eq 'c' ? 'selected':'' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">내용</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"tc\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageMaker.cri.searchType eq 'tc' ? 'selected':'' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">제목+내용</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"keyword\"\tplaceholder=\"검색어를 입력하세요.\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.keyword }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"width: 200px;\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<span class=\"input-group-append\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn btn-primary\" type=\"button\"onclick=\"searchList_go(1);\" data-card-widget=\"search\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-fw fa-search\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t                        <button class=\"header-search-close d-block d-xl-none\"><i class=\"zmdi zmdi-close\"></i></button>\r\n");
      out.write("\t\t                    </div>\r\n");
      out.write("\t                   <button class=\"mail-button-delete\" onclick=\"deleteMessage()\"><i class=\"zmdi zmdi-delete\"></i></button>\r\n");
      out.write("\t               </div>\r\n");
      out.write("\t           </div>\r\n");
      out.write("\t           <!--Mail Options End-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$('#selectAll').on('click',function(){\r\n");
      out.write("\t\tif($('#selectAll').is(\":checked\")){\r\n");
      out.write("\t\t\t$('.checkbox').attr('checked',true);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('.checkbox').attr('checked',false);\r\n");
      out.write("\t\t\t$('.checkbox').trigger(\"reset\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
      out.write("<!--Mail Start-->\r\n");
      out.write("<div class=\"single-mail\">\r\n");
      out.write("    <!--Top-->\r\n");
      out.write("    <div class=\"top\">\r\n");
      out.write("        <!--Left-->\r\n");
      out.write("        <div class=\"left\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><strong>제목</strong><h5>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.message_title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h5></li>\r\n");
      out.write("                <li><strong>From</strong> <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.message_sender }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("        <hr>\r\n");
      out.write("        <!--Right-->\r\n");
      out.write("        <div class=\"right\">\r\n");
      out.write("            <button><i class=\"zmdi zmdi-print\"></i></button>\r\n");
      out.write("            <button><i class=\"zmdi zmdi-tag-more\"></i></button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!--Bottom-->\r\n");
      out.write("    <div class=\"bottom\">\r\n");
      out.write("\t\t\t<!--Body Start-->\r\n");
      out.write("\t\t\t<div class=\"body\">\r\n");
      out.write("\t\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t\t<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.message_content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t<div class=\"attachment\">\r\n");
      out.write("\t\t\t\t\t<h5 class=\"title\">첨부파일:</h5>\r\n");
      out.write("\t\t\t\t\t");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      boolean _jspx_th_c_005fforEach_005f0_reused = false;
      try {
        _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fforEach_005f0.setParent(null);
        // /WEB-INF/views/message/messageDetail.jsp(34,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/message/messageDetail.jsp(34,5) '${message.attachList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${message.attachList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
        // /WEB-INF/views/message/messageDetail.jsp(34,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f0.setVar("attach");
        int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
          if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("<div class=\"row\" style=\"cursor: pointer;\"\r\n");
              out.write("\t\t\t\t\t\t\tonclick=\"location.href='");
              out.print(request.getContextPath());
              out.write("/message/attach/getFile.do?message_no=");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.message_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("&attach_no=");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.attach_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("';\">\r\n");
              out.write("\t\t\t\t\t\t\t<span class=\"fa fa-download\">");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.file_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("</span>\r\n");
              out.write("\t\t\t\t\t\t\t<br>\r\n");
              out.write("\t\t\t\t\t\t</div>\r\n");
              out.write("\t\t\t\t\t");
              int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_c_005fforEach_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
        _jspx_th_c_005fforEach_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
      }
      out.write("</div>\r\n");
      out.write("\t\t\t\t<!--Body End-->\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("<!--Mail End-->\r\n");
      out.write("\r\n");
      out.write("<!-- Modal -->\r\n");
      out.write("<div class=\"compose-mail-modal modal fade\" id=\"modal-compose-mail\">\r\n");
      out.write("\t<div class=\"modal-dialog modal-dialog-centered modal-xl\" style=\"position: absolute;right: 400px; top: 0px; bottom: 0px; width: 100%;\" >\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<h5 class=\"modal-title\">새 메시지 작성</h5>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t<i class=\"zmdi zmdi-close\"></i>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"form\">\r\n");
      out.write("\t\t\t\t<form role=\"form\" action=\"regist.do\" name=\"registForm\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-12 mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"message_seceiver\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"message_sender\" placeholder=\"발신자\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.member_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-10 mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"message_receiver\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"message_receiver\" placeholder=\"수신자\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-2 mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" class=\"button button-primary\"onclick=\"OpenWindow('");
      out.print(request.getContextPath());
      out.write("/message/member/admin','수신자추가',800,600)\" value=\"수신자 추가\" /> \r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-12 mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"message_title\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"message_title\" placeholder=\"제목\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-12 mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t<textarea class=\"summernote\" id=\"message_content\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"message_content\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"buttons-group col-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"button button-outline button-round button-warning\" id=\"addFileBtn\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"zmdi zmdi-attachment-alt\"></i> 파일첨부\r\n");
      out.write("\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"button button-round button-primary\"\r\n");
      out.write("\t\t\t\t\t\t\t\tid=\"registBtn\">전송</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"fileInput\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$('#registBtn').on('click', function(e) {\r\n");
      out.write("var form = document.registForm\r\n");
      out.write("var files = $('input[name=\"uploadFile\"]');\r\n");
      out.write(" \tfor(var file of files){\r\n");
      out.write(" \t\tif(file.value==\"\"){\r\n");
      out.write("\t\t\talert(\"파일을 선택하세요.\");\r\n");
      out.write("\t\t\tfile.focus();\r\n");
      out.write("\t\t\tfile.click();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t}\r\n");
      out.write(" \t\r\n");
      out.write("\tif(form.message_title.value==\"\"){\r\n");
      out.write("\t\talert(\"제목은 필수입니다.\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tdocument.registForm.submit();\t\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$('div #addFileBtn').on('click',function(event){\r\n");
      out.write("\t\r\n");
      out.write("\t//alert(\"클릭\")\r\n");
      out.write("\t\r\n");
      out.write("\tif($('input[name=\"uploadFile\"]').length >=5){\r\n");
      out.write("\t\talert(\"파일추가는 5개까지만 가능합니다.\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar input=$('<input>').attr({\"type\":\"file\",\"name\":\"uploadFile\"}).css(\"display\",\"inline\"); \r\n");
      out.write("\tvar div=$('<div>').addClass(\"inputRow\");\r\n");
      out.write("\tdiv.append(input).append(\"<button style='border:0;outline:0;' class='button button-outline button-round button-warning' type='button'>X</button\");\r\n");
      out.write("\tdiv.appendTo('.fileInput');\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$('div.fileInput').on('click','div.inputRow > button',function(event){\r\n");
      out.write("\t$(this).parent('div.inputRow').remove();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$('.fileInput').on('change','input[type=\"file\"]',function(event){\r\n");
      out.write("\tif(this.files[0].size>1024*1024*40){\r\n");
      out.write("\t\talert(\"파일 용량이 40MB를 초과하였습니다.\");\r\n");
      out.write("\t\tthis.value=\"\";\r\n");
      out.write("\t\t$(this).focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t} \r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
