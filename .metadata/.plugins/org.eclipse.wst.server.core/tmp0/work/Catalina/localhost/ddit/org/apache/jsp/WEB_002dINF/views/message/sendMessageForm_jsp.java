/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-12-04 17:21:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.message;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sendMessageForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/message/attach_js.jsp", Long.valueOf(1605023467656L));
    _jspx_dependants.put("jar:file:/C:/soo/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ddit/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1602513789311L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"content-header\">\r\n");
      out.write("\t<h5 class=\"modal-title\">새 메시지 작성</h5>\r\n");
      out.write("\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t<i class=\"zmdi zmdi-close\"></i>\r\n");
      out.write("\t</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form\">\r\n");
      out.write("\t<form role=\"form\" action=\"regist.do\" name=\"registForm\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-12 mb-30\">\r\n");
      out.write("\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"message_seceiver\"\r\n");
      out.write("\t\t\t\t\tname=\"message_sender\" placeholder=\"발신자\"\r\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.member_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-10 mb-30\">\r\n");
      out.write("\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"message_receiver\" name=\"message_receiver\" placeholder=\"수신자\" value=\"\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-2 mb-30\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" class=\"button button-primary\" id=\"memberAddBtn\" value=\"수신자 추가\" />\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-12 mb-30\">\r\n");
      out.write("\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"message_title\"\r\n");
      out.write("\t\t\t\t\tname=\"message_title\" placeholder=\"제목\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-12 mb-30\">\r\n");
      out.write("\t\t\t\t<textarea class=\"summernote\" id=\"message_content\"\r\n");
      out.write("\t\t\t\t\tname=\"message_content\"></textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"buttons-group col-12\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"button button-outline button-round button-warning\" id=\"addFileBtn\">\r\n");
      out.write("\t\t\t\t\t<i class=\"zmdi zmdi-attachment-alt\"></i> 파일첨부\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"button button-round button-primary\"\r\n");
      out.write("\t\t\t\t\tid=\"registBtn\">전송</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"fileInput\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(document).on('click','#memberAddBtn',function(){\r\n");
      out.write("\t//alert(\"멤버 추가 버튼 클릭\")\r\n");
      out.write("\tOpenWindow('");
      out.print(request.getContextPath());
      out.write("/message/member/admin','회원등록',800,950);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$('#registBtn').on('click', function(e) {\r\n");
      out.write("var form = document.registForm\r\n");
      out.write("var files = $('input[name=\"uploadFile\"]');\r\n");
      out.write(" \tfor(var file of files){\r\n");
      out.write(" \t\tif(file.value==\"\"){\r\n");
      out.write("\t\t\talert(\"파일을 선택하세요.\");\r\n");
      out.write("\t\t\tfile.focus();\r\n");
      out.write("\t\t\tfile.click();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t}\r\n");
      out.write(" \t\r\n");
      out.write("\tif(form.message_title.value==\"\"){\r\n");
      out.write("\t\talert(\"제목은 필수입니다.\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif(form.message_receiver.value==\"\"){\r\n");
      out.write("\t\talert(\"수신자를 추가해주세요\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tif($('#message_content').val().length>100){\r\n");
      out.write("\t\talert('메시지 내용 입력 제한을 초과하였습니다.');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tdocument.registForm.submit();\t\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$('div #addFileBtn').on('click',function(event){\r\n");
      out.write("\t\r\n");
      out.write("\t//alert(\"클릭\")\r\n");
      out.write("\t\r\n");
      out.write("\tif($('input[name=\"uploadFile\"]').length >=5){\r\n");
      out.write("\t\talert(\"파일추가는 5개까지만 가능합니다.\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar input=$('<input>').attr({\"type\":\"file\",\"name\":\"uploadFile\"}).css(\"display\",\"inline\"); \r\n");
      out.write("\tvar div=$('<div>').addClass(\"inputRow\");\r\n");
      out.write("\tdiv.append(input).append(\"<button style='border:0;outline:0;' class='button button-outline button-round button-warning' type='button'>X</button\");\r\n");
      out.write("\tdiv.appendTo('.fileInput');\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$('div.fileInput').on('click','div.inputRow > button',function(event){\r\n");
      out.write("\t$(this).parent('div.inputRow').remove();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$('.fileInput').on('change','input[type=\"file\"]',function(event){\r\n");
      out.write("\tif(this.files[0].size>1024*1024*40){\r\n");
      out.write("\t\talert(\"파일 용량이 40MB를 초과하였습니다.\");\r\n");
      out.write("\t\tthis.value=\"\";\r\n");
      out.write("\t\t$(this).focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t} \r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
